<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="project_B.RunCucumberTest" time="0.159" tests="15" errors="15" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/weihengxiao/Documents/GitHub/ECSE429/project-B/target/test-classes:/Users/weihengxiao/Documents/GitHub/ECSE429/project-B/target/classes:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-java/7.14.0/cucumber-java-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-core/7.14.0/cucumber-core-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-gherkin/7.14.0/cucumber-gherkin-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.14.0/cucumber-gherkin-messages-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/gherkin/26.2.0/gherkin-26.2.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/messages/22.0.0/messages-22.0.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/tag-expressions/5.0.6/tag-expressions-5.0.6.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-expressions/16.1.2/cucumber-expressions-16.1.2.jar:/Users/weihengxiao/.m2/repository/io/cucumber/datatable/7.14.0/datatable-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-plugin/7.14.0/cucumber-plugin-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/docstring/7.14.0/docstring-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/html-formatter/20.4.0/html-formatter-20.4.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/junit-xml-formatter/0.2.0/junit-xml-formatter-0.2.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/ci-environment/9.2.0/ci-environment-9.2.0.jar:/Users/weihengxiao/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.14.0/cucumber-junit-platform-engine-7.14.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-engine/1.10.0/junit-platform-engine-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-commons/1.10.0/junit-platform-commons-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-suite/1.10.0/junit-platform-suite-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-suite-api/1.10.0/junit-platform-suite-api-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.10.0/junit-platform-suite-engine-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.10.0/junit-platform-suite-commons-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.0/junit-platform-launcher-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.0/junit-jupiter-5.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.0/junit-jupiter-api-5.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.0/junit-jupiter-params-5.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.0/junit-jupiter-engine-5.10.0.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="America/Toronto"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CA"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk/21.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/weihengxiao/Documents/GitHub/ECSE429/project-B/target/surefire/surefirebooter-20231102150516803_3.jar /Users/weihengxiao/Documents/GitHub/ECSE429/project-B/target/surefire 2023-11-02T15-05-16_762-jvmRun1 surefire-20231102150516803_1tmp surefire_0-20231102150516803_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/weihengxiao/Documents/GitHub/ECSE429/project-B/target/test-classes:/Users/weihengxiao/Documents/GitHub/ECSE429/project-B/target/classes:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-java/7.14.0/cucumber-java-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-core/7.14.0/cucumber-core-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-gherkin/7.14.0/cucumber-gherkin-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.14.0/cucumber-gherkin-messages-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/gherkin/26.2.0/gherkin-26.2.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/messages/22.0.0/messages-22.0.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/tag-expressions/5.0.6/tag-expressions-5.0.6.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-expressions/16.1.2/cucumber-expressions-16.1.2.jar:/Users/weihengxiao/.m2/repository/io/cucumber/datatable/7.14.0/datatable-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-plugin/7.14.0/cucumber-plugin-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/docstring/7.14.0/docstring-7.14.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/html-formatter/20.4.0/html-formatter-20.4.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/junit-xml-formatter/0.2.0/junit-xml-formatter-0.2.0.jar:/Users/weihengxiao/.m2/repository/io/cucumber/ci-environment/9.2.0/ci-environment-9.2.0.jar:/Users/weihengxiao/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/weihengxiao/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.14.0/cucumber-junit-platform-engine-7.14.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-engine/1.10.0/junit-platform-engine-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-commons/1.10.0/junit-platform-commons-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-suite/1.10.0/junit-platform-suite-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-suite-api/1.10.0/junit-platform-suite-api-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.10.0/junit-platform-suite-engine-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.10.0/junit-platform-suite-commons-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/platform/junit-platform-launcher/1.10.0/junit-platform-launcher-1.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.0/junit-jupiter-5.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.0/junit-jupiter-api-5.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.0/junit-jupiter-params-5.10.0.jar:/Users/weihengxiao/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.0/junit-jupiter-engine-5.10.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/weihengxiao"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-10-17"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk/21.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/weihengxiao/Documents/GitHub/ECSE429/project-B"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/weihengxiao/Documents/GitHub/ECSE429/project-B/target/surefire/surefirebooter-20231102150516803_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="21.0.1"/>
    <property name="user.name" value="weihengxiao"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="13.5.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/weihengxiao/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/8q/b8w980cd2hnfvtgj9g015jnh0000gn/T/"/>
    <property name="java.version" value="21.0.1"/>
    <property name="user.dir" value="/Users/weihengxiao/Documents/GitHub/ECSE429/project-B"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/weihengxiao/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="21.0.1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="65.0"/>
  </properties>
  <testcase name="Example #1.1" classname="Examples" time="0.045">
    <error message="The step &apos;the todo with todo_id: 1, todo_title: &quot;scan paperwork&quot;, todo_doneStatus: false, todo_description: &quot;&quot;, exists&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists&quot;)&#10;public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], exists&quot;)&#10;public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user add the todo to the project&quot;)&#10;public void the_user_add_the_todo_to_the_project() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the todo should exist in the project&apos;s project_tasks field&quot;)&#10;public void the_todo_should_exist_in_the_project_s_project_tasks_field() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists")
public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], exists")
public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user add the todo to the project")
public void the_user_add_the_todo_to_the_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the todo should exist in the project's project_tasks field")
public void the_todo_should_exist_in_the_project_s_project_tasks_field() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Adding a specific task to a specific project which is unrelated to the task                                                    &amp#27;[90m# project-B/AddingTaskToProject.feature:13&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mproject with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user add the todo to the project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe todo should exist in the project's project_tasks field&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.005">
    <error message="The step &apos;the todo with todo_id: 1, todo_title: &quot;scan paperwork&quot;, todo_doneStatus: false, todo_description: &quot;&quot;, exists&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists&quot;)&#10;public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}},\\{id:{int}}], exists&quot;)&#10;public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1, Integer int2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user add the todo to the project&quot;)&#10;public void the_user_add_the_todo_to_the_project() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;nothing will change&quot;)&#10;public void nothing_will_change() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists")
public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}},\\{id:{int}}], exists")
public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user add the todo to the project")
public void the_user_add_the_todo_to_the_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("nothing will change")
public void nothing_will_change() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Adding a specific task to a specific project which is already related to the task                                                               &amp#27;[90m# project-B/AddingTaskToProject.feature:23&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mproject with project_title: "Office Work", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1},{id:2}], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user add the todo to the project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mnothing will change&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.004">
    <error message="The step &apos;the todo with todo_id: 1, todo_title: &quot;scan paperwork&quot;, todo_doneStatus: false, todo_description: &quot;&quot;, does not exist&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, does not exist&quot;)&#10;public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_does_not_exist(Integer int1, String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], exists&quot;)&#10;public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user add the todo to the project&quot;)&#10;public void the_user_add_the_todo_to_the_project() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the todo should not exist in the project&apos;s project_tasks field&quot;)&#10;public void the_todo_should_not_exist_in_the_project_s_project_tasks_field() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message should be displayed&quot;)&#10;public void an_error_message_should_be_displayed() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", does not exist' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, does not exist")
public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_does_not_exist(Integer int1, String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], exists")
public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user add the todo to the project")
public void the_user_add_the_todo_to_the_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the todo should not exist in the project's project_tasks field")
public void the_todo_should_not_exist_in_the_project_s_project_tasks_field() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message should be displayed")
public void an_error_message_should_be_displayed() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Creating Project with specific fields and with relationship to a non-existing task                                             &amp#27;[90m# project-B/AddingTaskToProject.feature:34&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", does not exist&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mproject with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user add the todo to the project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe todo should not exist in the project's project_tasks field&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36man error message should be displayed&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.005">
    <error message="The step &apos;the project with project_title: &quot;Office Work&quot;, project_completed: false, project_active: false, project_description: &quot;&quot;, project_tasks: [{id:1},{id:2}], exists&apos; and 2 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}},\\{id:{int}}], exists&quot;)&#10;public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1, Integer int2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user set the project with project_title: {string}, project_completed: true, project_active: true, project_description: {string}&quot;)&#10;public void the_user_set_the_project_with_project_title_project_completed_true_project_active_true_project_description(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the project&apos;s non-tasks fields should be updated&quot;)&#10;public void the_project_s_non_tasks_fields_should_be_updated() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the project with project_title: "Office Work", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1},{id:2}], exists' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}},\\{id:{int}}], exists")
public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user set the project with project_title: {string}, project_completed: true, project_active: true, project_description: {string}")
public void the_user_set_the_project_with_project_title_project_completed_true_project_active_true_project_description(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the project's non-tasks fields should be updated")
public void the_project_s_non_tasks_fields_should_be_updated() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Setting the non-tasks fields of the project to different values                                                                                       &amp#27;[90m# project-B/ChangingProjectFields.feature:12&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe project with project_title: "Office Work", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1},{id:2}], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user set the project with project_title: "Project1", project_completed: true, project_active: true, project_description: "description1"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe project's non-tasks fields should be updated&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.003">
    <error message="The step &apos;the project with project_title: &quot;Office Work&quot;, project_completed: false, project_active: false, project_description: &quot;&quot;, project_tasks: [{id:1},{id:2}], exists&apos; and 2 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}},\\{id:{int}}], exists&quot;)&#10;public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1, Integer int2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user set the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}&quot;)&#10;public void the_user_set_the_project_with_project_title_project_completed_false_project_active_false_project_description(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the project&apos;s non-tasks fields should remain the original values&quot;)&#10;public void the_project_s_non_tasks_fields_should_remain_the_original_values() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the project with project_title: "Office Work", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1},{id:2}], exists' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}},\\{id:{int}}], exists")
public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user set the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}")
public void the_user_set_the_project_with_project_title_project_completed_false_project_active_false_project_description(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the project's non-tasks fields should remain the original values")
public void the_project_s_non_tasks_fields_should_remain_the_original_values() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Setting the non-tasks fields of the project to the original values                                                                                    &amp#27;[90m# project-B/ChangingProjectFields.feature:21&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe project with project_title: "Office Work", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1},{id:2}], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user set the project with project_title: "Office Work", project_completed: false, project_active: false, project_description: ""&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe project's non-tasks fields should remain the original values&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.004">
    <error message="The step &apos;the project with project_title: &quot;ECSE429&quot;, project_completed: false, project_active: false, project_description: &quot;&quot;, project_tasks: [], does not exist&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], does not exist&quot;)&#10;public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_does_not_exist(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user set the project with project_title: {string}, project_completed: true, project_active: true, project_description: {string}&quot;)&#10;public void the_user_set_the_project_with_project_title_project_completed_true_project_active_true_project_description(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the project with modified non-tasks fields should not exist under Projects&quot;)&#10;public void the_project_with_modified_non_tasks_fields_should_not_exist_under_projects() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message should be displayed&quot;)&#10;public void an_error_message_should_be_displayed() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [], does not exist' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], does not exist")
public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_does_not_exist(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user set the project with project_title: {string}, project_completed: true, project_active: true, project_description: {string}")
public void the_user_set_the_project_with_project_title_project_completed_true_project_active_true_project_description(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the project with modified non-tasks fields should not exist under Projects")
public void the_project_with_modified_non_tasks_fields_should_not_exist_under_projects() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message should be displayed")
public void an_error_message_should_be_displayed() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Setting the non-tasks fields of a non-existing project                                                                                       &amp#27;[90m# project-B/ChangingProjectFields.feature:31&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [], does not exist&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user set the project with project_title: "ECSE428", project_completed: true, project_active: true, project_description: "description2"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe project with modified non-tasks fields should not exist under Projects&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36man error message should be displayed&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.003">
    <error message="The step &apos;the todo with todo_id: 1, todo_title: &quot;scan paperwork&quot;, todo_doneStatus: false, todo_description: &quot;&quot;, exists&apos; and 2 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists&quot;)&#10;public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user creates project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: []&quot;)&#10;public void the_user_creates_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the new project with specific fields should exist under Projects&quot;)&#10;public void the_new_project_with_specific_fields_should_exist_under_projects() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists")
public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user creates project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: []")
public void the_user_creates_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the new project with specific fields should exist under Projects")
public void the_new_project_with_specific_fields_should_exist_under_projects() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Creating project with specific fields and no relationship to task                                                                        &amp#27;[90m# project-B/CreatingProjectWithFields.feature:12&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user creates project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: []&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe new project with specific fields should exist under Projects&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.003">
    <error message="The step &apos;the todo with todo_id: 1, todo_title: &quot;scan paperwork&quot;, todo_doneStatus: false, todo_description: &quot;&quot;, exists&apos; and 2 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists&quot;)&#10;public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user creates project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}}]&quot;)&#10;public void the_user_creates_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks(String string, String string2, Integer int1) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the new project with specific fields should exist under Projects&quot;)&#10;public void the_new_project_with_specific_fields_should_exist_under_projects() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists")
public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user creates project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}}]")
public void the_user_creates_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks(String string, String string2, Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the new project with specific fields should exist under Projects")
public void the_new_project_with_specific_fields_should_exist_under_projects() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Creating project with specific fields and with relationship to task                                                                            &amp#27;[90m# project-B/CreatingProjectWithFields.feature:21&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user creates project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1}]&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe new project with specific fields should exist under Projects&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.002">
    <error message="The step &apos;the todo with todo_id: 3, does not exist&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the todo with todo_id: {int}, does not exist&quot;)&#10;public void the_todo_with_todo_id_does_not_exist(Integer int1) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user creates project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}}]&quot;)&#10;public void the_user_creates_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks(String string, String string2, Integer int1) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the new project with specific fields should not exist under Projects&quot;)&#10;public void the_new_project_with_specific_fields_should_not_exist_under_projects() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message should be displayed&quot;)&#10;public void an_error_message_should_be_displayed() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the todo with todo_id: 3, does not exist' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the todo with todo_id: {int}, does not exist")
public void the_todo_with_todo_id_does_not_exist(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user creates project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}}]")
public void the_user_creates_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks(String string, String string2, Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the new project with specific fields should not exist under Projects")
public void the_new_project_with_specific_fields_should_not_exist_under_projects() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message should be displayed")
public void an_error_message_should_be_displayed() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Creating project with specific fields and with relationship to a non-existing task                                                             &amp#27;[90m# project-B/CreatingProjectWithFields.feature:31&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe todo with todo_id: 3, does not exist&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user creates project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:3}]&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe new project with specific fields should not exist under Projects&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36man error message should be displayed&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.016">
    <error message="The step &apos;the project with project_title: &quot;ECSE429&quot;, project_completed: false, project_active: false, project_description: &quot;&quot;, project_tasks: [], exists&apos; and 2 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], exists&quot;)&#10;public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user tries to delete this project&quot;)&#10;public void the_user_tries_to_delete_this_project() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;this project should no longer exist under Projects&quot;)&#10;public void this_project_should_no_longer_exist_under_projects() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [], exists' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], exists")
public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user tries to delete this project")
public void the_user_tries_to_delete_this_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("this project should no longer exist under Projects")
public void this_project_should_no_longer_exist_under_projects() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Deleting a specific project without tasks                                                                                            &amp#27;[90m# project-B/RemovingProject.feature:12&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user tries to delete this project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthis project should no longer exist under Projects&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.003">
    <error message="The step &apos;the project with project_title: &quot;ECSE429&quot;, project_completed: false, project_active: false, project_description: &quot;&quot;, project_tasks: [{id:1}], exists&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}}], exists&quot;)&#10;public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user tries to delete this project&quot;)&#10;public void the_user_tries_to_delete_this_project() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;this project should no longer exist under Projects&quot;)&#10;public void this_project_should_no_longer_exist_under_projects() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;this project should be removed from the todo_tasksof field of todo: \\{id:{int}}&quot;)&#10;public void this_project_should_be_removed_from_the_todo_tasksof_field_of_todo(Integer int1) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1}], exists' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}}], exists")
public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user tries to delete this project")
public void the_user_tries_to_delete_this_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("this project should no longer exist under Projects")
public void this_project_should_no_longer_exist_under_projects() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("this project should be removed from the todo_tasksof field of todo: \\{id:{int}}")
public void this_project_should_be_removed_from_the_todo_tasksof_field_of_todo(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Deleting a specific project with tasks                                                                                                     &amp#27;[90m# project-B/RemovingProject.feature:22&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1}], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user tries to delete this project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthis project should no longer exist under Projects&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mthis project should be removed from the todo_tasksof field of todo: {id:1}&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.002">
    <error message="The step &apos;the project with project_title: &quot;ECSE429&quot;, project_completed: false, project_active: false, project_description: &quot;&quot;, project_tasks: [], does not exist&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], does not exist&quot;)&#10;public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_does_not_exist(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user tries to delete this project&quot;)&#10;public void the_user_tries_to_delete_this_project() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the project should not exist under Projects&quot;)&#10;public void the_project_should_not_exist_under_projects() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message should be displayed&quot;)&#10;public void an_error_message_should_be_displayed() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [], does not exist' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], does not exist")
public void the_project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_does_not_exist(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user tries to delete this project")
public void the_user_tries_to_delete_this_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the project should not exist under Projects")
public void the_project_should_not_exist_under_projects() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message should be displayed")
public void an_error_message_should_be_displayed() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Deleting a non-existing project                                                                                                              &amp#27;[90m# project-B/RemovingProject.feature:32&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe project with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [], does not exist&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user tries to delete this project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe project should not exist under Projects&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36man error message should be displayed&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.003">
    <error message="The step &apos;the todo with todo_id: 1, todo_title: &quot;scan paperwork&quot;, todo_doneStatus: false, todo_description: &quot;&quot;, exists&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists&quot;)&#10;public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}}], exists&quot;)&#10;public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user tries to remove the todo from the project&quot;)&#10;public void the_user_tries_to_remove_the_todo_from_the_project() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the todo should not exist in the project&apos;s project_tasks field&quot;)&#10;public void the_todo_should_not_exist_in_the_project_s_project_tasks_field() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists")
public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}}], exists")
public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user tries to remove the todo from the project")
public void the_user_tries_to_remove_the_todo_from_the_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the todo should not exist in the project's project_tasks field")
public void the_todo_should_not_exist_in_the_project_s_project_tasks_field() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Removing a specific task from a specific project which is only related to that task                                                  &amp#27;[90m# project-B/RemovingTaskFromProject.feature:13&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mproject with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1}], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user tries to remove the todo from the project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe todo should not exist in the project's project_tasks field&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.002">
    <error message="The step &apos;the todo with todo_id: 1, todo_title: &quot;scan paperwork&quot;, todo_doneStatus: false, todo_description: &quot;&quot;, exists&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists&quot;)&#10;public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}},\\{id:{int}}], exists&quot;)&#10;public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1, Integer int2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user tries to remove the todo from the project&quot;)&#10;public void the_user_tries_to_remove_the_todo_from_the_project() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the todo should not exist in the project&apos;s project_tasks field&quot;)&#10;public void the_todo_should_not_exist_in_the_project_s_project_tasks_field() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;other todos related to the project will not be affected&quot;)&#10;public void other_todos_related_to_the_project_will_not_be_affected() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists")
public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [\\{id:{int}},\\{id:{int}}], exists")
public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2, Integer int1, Integer int2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user tries to remove the todo from the project")
public void the_user_tries_to_remove_the_todo_from_the_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the todo should not exist in the project's project_tasks field")
public void the_todo_should_not_exist_in_the_project_s_project_tasks_field() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("other todos related to the project will not be affected")
public void other_todos_related_to_the_project_will_not_be_affected() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Removing a specific task from a specific project which is related to several tasks                                                              &amp#27;[90m# project-B/RemovingTaskFromProject.feature:24&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mproject with project_title: "Office Work", project_completed: false, project_active: false, project_description: "", project_tasks: [{id:1},{id:2}], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user tries to remove the todo from the project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe todo should not exist in the project's project_tasks field&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mother todos related to the project will not be affected&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.002">
    <error message="The step &apos;the todo with todo_id: 1, todo_title: &quot;scan paperwork&quot;, todo_doneStatus: false, todo_description: &quot;&quot;, exists&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists&quot;)&#10;public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], exists&quot;)&#10;public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;the user tries to remove the todo from the project&quot;)&#10;public void the_user_tries_to_remove_the_todo_from_the_project() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;the todo should not exist in the project&apos;s project_tasks field&quot;)&#10;public void the_todo_should_not_exist_in_the_project_s_project_tasks_field() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;an error message should be displayed&quot;)&#10;public void an_error_message_should_be_displayed() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'the todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("the todo with todo_id: {int}, todo_title: {string}, todo_doneStatus: false, todo_description: {string}, exists")
public void the_todo_with_todo_id_todo_title_todo_done_status_false_todo_description_exists(Integer int1, String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("project with project_title: {string}, project_completed: false, project_active: false, project_description: {string}, project_tasks: [], exists")
public void project_with_project_title_project_completed_false_project_active_false_project_description_project_tasks_exists(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("the user tries to remove the todo from the project")
public void the_user_tries_to_remove_the_todo_from_the_project() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("the todo should not exist in the project's project_tasks field")
public void the_todo_should_not_exist_in_the_project_s_project_tasks_field() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("an error message should be displayed")
public void an_error_message_should_be_displayed() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
	at io.cucumber.junit.platform.engine.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:22)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.lambda$runTestCase$4(CucumberEngineExecutionContext.java:114)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
	at io.cucumber.junit.platform.engine.CucumberEngineExecutionContext.runTestCase(CucumberEngineExecutionContext.java:109)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:168)
	at io.cucumber.junit.platform.engine.NodeDescriptor$PickleDescriptor.execute(NodeDescriptor.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[
Scenario Outline: Removing a specific task from a specific project which is not related to the task                                              &amp#27;[90m# project-B/RemovingTaskFromProject.feature:35&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mthe todo with todo_id: 1, todo_title: "scan paperwork", todo_doneStatus: false, todo_description: "", exists&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mproject with project_title: "ECSE429", project_completed: false, project_active: false, project_description: "", project_tasks: [], exists&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mthe user tries to remove the todo from the project&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mthe todo should not exist in the project's project_tasks field&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36man error message should be displayed&amp#27;[0m
]]></system-out>
  </testcase>
</testsuite>